#version 460 core
layout (location = 0) in vec2 position;
layout (location = 1) in vec3 colour;
//layout (location = 1) in vec3 color;
layout (location = 2) in vec2 texture;

out vec4 vertexColour;
//out vec2 textureCoordinates;

//uniform mat4 transform;
//uniform mat4 model;
//uniform mat4 view;
//uniform mat4 projection;

void main()
{
    //gl_Position = transform * vec4(position.x, position.y, position.z, 1.0);
    gl_Position = vec4(position.x, position.y, 0.0, 1.0);
    vertexColour = vec4( colour.xyz, 1.0 );
    //gl_Position = projection * view * model * vec4(position, 1.0);
    //vertexColor = vec4(color, 1.0); // vec4(0.5, 0, 0, 1.0);

    // texture y coordinates need to be flipped as openGL expects
    // 0.0 to be the bottom of the image, but images have 0.0 as
    // the top
    //textureCoordinates = vec2(texture.x, 1.0f - texture.y); 
}
